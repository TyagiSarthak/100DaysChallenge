class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int n=nums.size();
        vector<int> temp;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if(nums[i]+nums[j]==target){
                    temp.push_back(i);
                    temp.push_back(j);
                    break;
                }
            }
            if(temp.size()!=0)
                break;
        }
        return temp;
    }
};

// using unordered map

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int n=nums.size();
        unordered_map<int,int> res;
        for(int i=0;i<n;i++){
            int temp = target-nums[i];
            if(res.count(temp))
                return{res[temp],i};
            res[nums[i]]=i;
        }
        return {};
    }
};
